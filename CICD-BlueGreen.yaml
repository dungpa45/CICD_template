#===========================================================================
# This cloudformation will create 
# - 1 CodePipeline
# - 1 Role for CodePipeline
# - 1 CodeBuild
# - 1 Role for CodeBuild
# - 1 CodeDeploy Application
# - 1 Role for CodeDeploy
# - 1 AutoScaling Group
# - 1 Custom Resource DeploymentGroup
# - Custom Resource: Get random string, convert to lowercase, get subnet ARN
#
# Before launch this stack please launch S3-sourcePipeline.yaml stack will 
# create S3 source for CodePipeline
#===========================================================================

Description: CICD native AWS template
Parameters:
  environment:
    Type: String
    Default: Dev
    Description: Environment of the system. It should be in the abbreviation format, such as Dev, Prod, Stag,.... The first character must be capitalized.
    AllowedPattern: '[A-Z].*'
    MaxLength: 6
  projectName:
    Type: String
    Default: Project
    Description: The project name. The first character in the prefix must be capitalized.
    AllowedPattern: '[0-9A-Z].*'
  componentName:
    Type: String
    Default: Server
    Description: The component name of microservices. The first character in the prefix must be capitalized.
    AllowedPattern: '[0-9A-Z].*'
  #CodeCommit params
  gitBranchName:
    Type: String
    Default: dev
    Description: The branch name of git repository
    AllowedPattern: '[a-zA-Z].*'
    MaxLength: 10
  RepoName:
    Type: String
    Description: Repository in your CodeCommit
    Default: Repo
  #Build params
  BuildImage:
    Type: String
    Description: 'The image tag or image digest that identifies the Docker image to use for this build project.For an image tag: <registry>/<repository>:<tag>'
    Default: lamdn98/abc:php72-debian
  PipelineArtifactStoreBucket:
    Type: String
    Default: oems-sourcepipeline
    AllowedPattern: '[0-9a-z].*'
  SecretNameValue:
    Type: String
    Description: Name of Secret in Secrets Manager
    Default: secret
  RegionNameValue:
    Type: String
    Description: 'Name of region have that secret. ex:ap-southeast-1'
    Default: ap-southeast-1
  #VPC params
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the Amazon VPC.
  SubnetId:
    Type: List<AWS::EC2::Subnet::Id>
    Description: A list of one or more subnet IDs in your Amazon VPC. The maximum count is 16.
  SecurityGroupId:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: A list of one or more security groups IDs in your Amazon VPC. The maximum count is 5.
  # ELB info
  LoadBalancerName:
    Type: String
    Description: Name of Elastic Load Balancer
  TargetGroupArn:
    Type: String
    Description: TargetGroup Arn assosiate with your ELB
  TargetGroupName:
    Type: String
    Description: TargetGroup Name assosiate with your ELB
  LaunchTemplateName:
    Type: String
    Description: Name of launch template
  LaunchTemplateVersion:
    Type: Number
    Description: Number of launch template version
    # to be continue .....
# Conditions:
# ......
Resources:
  # ====================================================================
  # Role for CodePipeline 
  # ====================================================================
  PipelineRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Role for CodePipeline created by CloudFormation
      RoleName: !Sub ${projectName}-${componentName}-${environment}-Pipeline-Role
      Policies:
        - PolicyName: !Sub ${projectName}-${componentName}-${environment}-Pipeline-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - iam:PassRole
              Resource: "*"
              Effect: Allow
              Condition:
                StringEqualsIfExists:
                  iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - codestar-connections:UseConnection
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
              Resource: "*"
            - Effect: Allow
              Action:
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:UpdateProduct
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:ValidateTemplate
              Resource: "*"
            - Effect: Allow
              Action:
              - ecr:DescribeImages
              Resource: "*"
            - Effect: Allow
              Action:
              - states:DescribeExecution
              - states:DescribeStateMachine
              - states:StartExecution
              Resource: "*"
            - Effect: Allow
              Action:
              - appconfig:StartDeployment
              - appconfig:StopDeployment
              - appconfig:GetDeployment
              Resource: "*"
      Tags: 
        - Key: Env
          Value: !Ref environment
        - Key: Project
          Value: !Ref projectName
        - Key: ComponentRole
          Value: !Ref componentName
  # ====================================================================
  # Role for CodeBuild Project 
  # ====================================================================
  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com 
            Action: 
              - sts:AssumeRole
      Description: AWS CodeBuild's role created by CloudFormation
      Path: /service-role/
      RoleName: !Sub ${projectName}-${componentName}-${environment}-Build-Role
      Tags: 
        - Key: Env
          Value: !Ref environment
        - Key: Project
          Value: !Ref projectName
        - Key: ComponentRole
          Value: !Ref componentName
      Policies:
        - PolicyName: !Sub ${projectName}-${componentName}-${environment}-Build-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: "*"
            - Effect: Allow
              Resource:
              - !Sub arn:aws:logs:ap-southeast-1:700808010711:log-group:/aws/codebuild/${projectName}-${componentName}-${environment}-Project
              - !Sub arn:aws:logs:ap-southeast-1:700808010711:log-group:/aws/codebuild/${projectName}-${componentName}-${environment}-Project:*
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            - Effect: Allow
              Resource:
              - !Sub 
                - arn:aws:s3:::${projectName}-sourcepipeline*
                - projectName: !Ref ConvertLowercase
              Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            - Effect: Allow
              Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
              Resource:
              - !Sub arn:aws:codebuild:ap-southeast-1:700808010711:report-group/${projectName}-${componentName}-${environment}-Project-*
            - Effect: Allow
              Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeDhcpOptions
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeVpcs
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2:CreateNetworkInterfacePermission
              Resource: arn:aws:ec2:ap-southeast-1:700808010711:network-interface/*
              Condition:
                StringEquals:
                  ec2:Subnet: !Split [',', !Ref SubnetArn]
                  ec2:AuthorizedService: codebuild.amazonaws.com
  # ====================================================================
  # Role for CodeDeploy Project 
  # ====================================================================
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com 
            Action: 
              - sts:AssumeRole
      Description: AWS CodeDeploy's role created by CloudFormation
      RoleName: !Sub ${projectName}-${componentName}-${environment}-Deploy-Role
      Tags: 
        - Key: Env
          Value: !Ref environment
        - Key: Project
          Value: !Ref projectName
        - Key: ComponentRole
          Value: !Ref componentName
      Policies:
        - PolicyName: !Sub ${projectName}-${componentName}-${environment}-Deploy-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - iam:PassRole
              - ec2:CreateTags
              - ec2:RunInstances
              Resource: "*"
            - Effect: Allow
              Action:
              - autoscaling:CompleteLifecycleAction
              - autoscaling:DeleteLifecycleHook
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:PutLifecycleHook
              - autoscaling:RecordLifecycleActionHeartbeat
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:EnableMetricsCollection
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribePolicies
              - autoscaling:DescribeScheduledActions
              - autoscaling:DescribeNotificationConfigurations
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:SuspendProcesses
              - autoscaling:ResumeProcesses
              - autoscaling:AttachLoadBalancers
              - autoscaling:AttachLoadBalancerTargetGroups
              - autoscaling:PutScalingPolicy
              - autoscaling:PutScheduledUpdateGroupAction
              - autoscaling:PutNotificationConfiguration
              - autoscaling:PutLifecycleHook
              - autoscaling:DescribeScalingActivities
              - autoscaling:DeleteAutoScalingGroup
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:TerminateInstances
              - tag:GetResources
              - sns:Publish
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricAlarm
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              Resource: "*"
  # ====================================================================
  # Resource CodeBuild 
  # ====================================================================
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
        EncryptionDisabled: false
      Name: !Sub ${projectName}-${componentName}-${environment}-Project
      Description: !Sub Build-${componentName}-${environment}
      # EncryptionKey: 
      Environment: 
        Image: !Ref BuildImage
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: SECRET_NAME
            Type: PLAINTEXT
            Value: !Ref SecretNameValue
          - Name: REGION_NAME
            Type: PLAINTEXT
            Value: !Ref RegionNameValue
        ImagePullCredentialsType: SERVICE_ROLE
        PrivilegedMode: false
      LogsConfig: 
        CloudWatchLogs: 
          Status: ENABLED
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml 
        Location: !Sub https://git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/${RepoName}
      VpcConfig: 
        SecurityGroupIds: !Ref SecurityGroupId
        Subnets: !Ref SubnetId
        VpcId: !Ref VPCId
      Tags: 
        - Key: Name
          Value: !Sub ${projectName}-${componentName}-${environment}-Project
        - Key: Env
          Value: !Ref environment
        - Key: Project
          Value: !Ref projectName
        - Key: ComponentRole
          Value: !Ref componentName
  # ====================================================================
  # Resource CodeDeploy 
  # ====================================================================
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub ${projectName}-${componentName}-${environment}-Deploy
      ComputePlatform: Server
  #================================
  # Generate Random string
  #================================
  RandomString:
    Type: Custom::RandomString
    Properties:
      ServiceToken: arn:aws:lambda:ap-southeast-1:700808010711:function:test-custom-function
  #================================
  # Get SubnetArn by SubnetId
  #================================
  SubnetArn:
    Type: Custom::GetSubnetArn
    Properties:
      ServiceToken: arn:aws:lambda:ap-southeast-1:700808010711:function:test-custom-function
      Region: ap-southeast-1
      SubnetIds: !Ref SubnetId
  #================================
  # Convert string uppercase to lower case
  #================================
  ConvertLowercase:
    Type: Custom::ConvertLowercase
    Properties:
      ServiceToken: arn:aws:lambda:ap-southeast-1:700808010711:function:test-custom-function
      NameConvert: !Ref projectName
  # ====================================================================
  # Resource AutoScaling Group
  # ====================================================================
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub 
        - CodeDeploy_${projectName}-${componentName}-${environment}-DMG_d-${string}
        - projectName: !Ref projectName
          componentName: !Ref componentName
          environment: !Ref environment
          string: !Ref RandomString
      AvailabilityZones: 
        - ap-southeast-1a
        - ap-southeast-1b
        - ap-southeast-1c
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateName: !Ref LaunchTemplateName
        Version: !Ref LaunchTemplateVersion
      MaxSize: '2'
      MinSize: '0'
      DesiredCapacity: '1'
      Tags: 
        - Key: Env
          PropagateAtLaunch: true
          Value: !Ref environment
        - Key: Project
          PropagateAtLaunch: true
          Value: !Ref projectName
        - Key: ComponentRole
          PropagateAtLaunch: true
          Value: !Ref componentName
        - Key: Name
          PropagateAtLaunch: true
          Value: !Sub ${projectName}-${componentName}-${environment}-ASG
      TargetGroupARNs: 
        - !Ref TargetGroupArn
      TerminationPolicies: 
        - Default
      VPCZoneIdentifier: 
        !Ref SubnetId

  # ====================================================================
  # Resource CodeDeploy Deployment Group
  # ====================================================================
  CodeDeployDMG:
    Type: Custom::CodeDeployDMG
    Properties:
      ServiceToken: arn:aws:lambda:ap-southeast-1:700808010711:function:test-custom-function
      Region: ap-southeast-1
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Sub ${projectName}-${componentName}-${environment}-DMG
      AutoScalingGroup: !Ref MyAutoScalingGroup
      CodeDeployRoleArn: !GetAtt CodeDeployRole.Arn
      LoadBalancerName: !Ref LoadBalancerName
      TargetGroupName: !Ref TargetGroupName

  # ====================================================================
  # Resource CodePipeline 
  # ====================================================================
  CodePipelineResource:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Sub 
        - ${prefix}-${component}-${env}-Pipeline
        - prefix: !Ref projectName
          component: !Ref componentName
          env: !Ref environment
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore: 
        Type: S3
        Location: !Ref PipelineArtifactStoreBucket
      Stages: 
        -
          Name: Source
          Actions:
            -
              Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref RepoName
                PollForSourceChanges: false
                BranchName: !Ref gitBranchName
        -
          Name: Build
          Actions:
            - 
              Name: Build
              Namespace: BuildVariables
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts: 
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
        -    
          Name: Deploy
          Actions:
            -
              Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDMG
      Tags: 
        - Key: Env
          Value: !Ref environment
        - Key: Project
          Value: !Ref projectName
        - Key: ComponentRole
          Value: !Ref componentName

####################################
# Output
####################################
Outputs:
  SubnetArn:
    Value: !Ref SubnetArn
