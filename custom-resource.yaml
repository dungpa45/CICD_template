Resources:
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com 
            Action: 
              - sts:AssumeRole
      Description: AWS CodeDeploy's role created by CloudFormation
      RoleName: test-Deploy-Role
      Tags: 
        - Key: Env
          Value: Dev 
      Policies:
        - PolicyName: test-Deploy-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - iam:PassRole
              - ec2:CreateTags
              - ec2:RunInstances
              Resource: "*"
            - Effect: Allow
              Action:
              - autoscaling:CompleteLifecycleAction
              - autoscaling:DeleteLifecycleHook
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:PutLifecycleHook
              - autoscaling:RecordLifecycleActionHeartbeat
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:EnableMetricsCollection
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribePolicies
              - autoscaling:DescribeScheduledActions
              - autoscaling:DescribeNotificationConfigurations
              - autoscaling:DescribeLifecycleHooks
              - autoscaling:SuspendProcesses
              - autoscaling:ResumeProcesses
              - autoscaling:AttachLoadBalancers
              - autoscaling:AttachLoadBalancerTargetGroups
              - autoscaling:PutScalingPolicy
              - autoscaling:PutScheduledUpdateGroupAction
              - autoscaling:PutNotificationConfiguration
              - autoscaling:PutLifecycleHook
              - autoscaling:DescribeScalingActivities
              - autoscaling:DeleteAutoScalingGroup
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:TerminateInstances
              - tag:GetResources
              - sns:Publish
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricAlarm
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              Resource: "*"
  
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: test-deploy
      ComputePlatform: Server  
  
  CodeDeployDMG:
    Type: Custom::CodeDeployDMG
    Properties:
      ServiceToken: arn:aws:lambda:ap-southeast-1:700808010711:function:test-custom-function
      Region: ap-southeast-1
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: test-DMG
      AutoScalingGroup: CodeDeploy_OEMS-Frontend-Stag-DMG_d-9JU60JA26
      CodeDeployRoleArn: !GetAtt CodeDeployRole.Arn
      LoadBalancerName: OEMS-Stag-ALB
      TargetGroupName: OEMS-WebFrontend-Stag-TG
